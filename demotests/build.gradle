plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'io.qameta.allure' version '2.8.1'
	
}

group = 'br.com.santocodigo'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
   testCompile
}

compileJava { options.encoding = "ISO-8859-1" }
compileTestJava { options.encoding = "ISO-8859-1" }

allure {
    version = '2.14.0'
    resultsDir = file(project.projectDir.toString()+'/reports/allure-results')
}

jacoco{
    reportsDirectory = file(project.projectDir.toString()+'/reports/jacoco')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('io.qameta.allure:allure-junit5:2.14.0')
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
}

build.dependsOn jacocoTestReport


tasks.named('test') {
	useJUnitPlatform()
   	systemProperty("allure.results.directory", project.buildDir.toString() + "/maralaallure-results")
	
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = true
        html.required = true
    }
}
